CREATE TABLE IF NOT EXISTS projects (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL CHECK (name <> ''),
    priority integer NOT NULL,
    description text,
    deliverydate date NOT NULL
);

CREATE TABLE IF NOT EXISTS tasks (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL CHECK (name <> ''),
    done BOOLEAN,
    projectId INTEGER REFERENCES projects(id)
);

-- list al tables
\dt

-- list all data in projects table
SELECT * FROM projects;

-- INSERT TEST DATA FOR projects
INSERT INTO projects(name, priority, description, deliverydate)
    VALUES ('Make a web app', 1, 'Using Vue.js', '2020-03-01');

INSERT INTO projects(name, priority, description, deliverydate)
    VALUES ('Make an API', 1, 'Using Node.js', '2020-04-15');

INSERT INTO projects(name, priority, description, deliverydate)
    VALUES ('Make a Desktop App', 2, 'Using Electron', '2020-05-23');

-- INSERT TEST DATA FOR tasks
INSERT INTO tasks(name, done, projectId)
    VALUES('Download Vue.js', false, 1);

INSERT INTO tasks(name, done, projectId)
    VALUES('Create UI Web', false, 1);

INSERT INTO tasks(name, done, projectId)
    VALUES('Download Node.js', false, 2);

INSERT INTO tasks(name, done, projectId)
    VALUES('Design the UI', false, 2);

SELECT * FROM tasks;

SELECT * FROM tasks where projectId = 1;